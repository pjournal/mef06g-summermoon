---
title: "Assignment 1"
date: "2022-10-01"
---

## DATA WRANGLING

Before starting EDA, it will be better to prepare the data. We will convert related data to appropriate data types. If we have proper data types, then we can easily use libraries and functions to manipulate the data.

Loading libraries:

```{r,output=FALSE}
library(dplyr)
library(readxl)
library(lubridate)
library(tidyr)
library(ggplot2)
library(stringi)
library(ggridges)

options(dplyr.summarise.inform = FALSE)
```

Reading xls file:

```{r}
deals<-read_excel("docs/startup_deals_2021.xlsx")
```

Let's change the column names and look at the summary.

```{r}
deals<-rename(deals,target_company=`Target Company`)
deals<-rename(deals,announcement_date=`Announcement Date`)
deals<-rename(deals,financial_investor=`Financial Investor`)
deals<-rename(deals,investor_origin=`Investor's Origin`)
deals<-rename(deals,stake=`Stake (%)`)
deals<-rename(deals,deal_value=`Deal Value (USD)`)
deals<-rename(deals,investment_stage=`Investment Stage`)
deals<-rename(deals,sector=`Sector`)
deals<-rename(deals,investor=`Investor`)
```

Changing the class of "Announcement Data" column from character to date. Use built-in function -\> "my" function from lubridate library.

```{r}
deals$announcement_date<-my(deals$announcement_date)  
```

Changing the class of "Stake (%)" from character to numeric. First erasing "%" character, dividing by 100 and then converting the numeric.

```{r,warning=FALSE}
deals$stake<-as.numeric(sub("%","",deals$stake))
```

Changing the class of "Deal Value (USD)" from character to numeric.

```{r,warning=FALSE}
deals$deal_value<-as.numeric(deals$deal_value)
```

Let's fix the wrong values in column 'Sector'

```{r}
deals$sector[deals$sector == 'Telecpm'] <- 'Telecom'
deals$sector[deals$sector == 'Cybersec urity'] <- 'Cybersecurity'
deals$sector[deals$sector == 'B lockchain'] <- 'Blockchain'
deals$sector[deals$sector == 'Artificial intelligence'] <- 'Artificial Intelligence'
deals$sector[deals$sector == 'DiÄŸital Comparison'] <- 'Digital Comparison'
deals$sector[deals$sector == 'I mage process'] <- 'Image process'
```

Let's add count values to comma separated values, investor_origin and investor.

```{r}
deals$org_count <- lengths(strsplit(deals$investor_origin, ","))
deals$inv_count <- lengths(strsplit(deals$investor, ","))
```

Let's look at the final types of all columns:

```{r}
glimpse(deals)
```

Dataframes namely "origins" and "investors" are created in order to separate collapsed columns into multiple rows.

```{r}
origins <- deals %>% select(ID, investor_origin)
```

```{r}
origins <- separate_rows(origins, investor_origin, sep = ", ")
```

```{r}
investors <- deals %>% select(ID, investor)
```

```{r}
investors <- separate_rows(investors, investor, sep = ",")
```

## EDA (Exploratory Data Analysis)

```{r}
df0 <- deals %>% 
  group_by(investment_stage) %>% 
  summarise(count = n(), total_deal = sum(deal_value))
```

```{r, warning=FALSE}
df0 %>%
  ggplot(aes(x = "", y = total_deal, fill= investment_stage)) +
  geom_bar(stat="identity", width=1) +
  coord_polar("y", start=0) +
  labs(title = "Deal(USD) by Investment Stage") +
  xlab("") +
  ylab("")
```

```{r}
df1 <- deals %>% filter(investment_stage != "Acquisition") %>% 
                group_by(announcement_date, investment_stage) %>% 
                summarise(total_deal = sum(deal_value))
```

```{r}
df1 %>% ggplot(aes(x = announcement_date, y = total_deal, color = investment_stage)) + 
        geom_line() +
        scale_x_date(date_breaks="1 month", date_labels="%b") +
        labs(title = "Monthly Deal(USD) by Investment Stage") +
        xlab("Announcement Date") +
        ylab("Deal(USD)")
```

```{r}
df1 %>% 
  pivot_wider(names_from = investment_stage, values_from = total_deal)
```

```{r}
df2 <- deals %>% filter(investment_stage != "Acquisition") %>%
         group_by(investment_stage, sector) %>%
         summarise(total_deal = sum(deal_value)) %>%
         top_n(10, total_deal) %>%
         arrange(desc(total_deal))
```

```{r}
df2 %>% ggplot(aes(x = reorder(sector, -total_deal), y = total_deal, fill = investment_stage)) +
        geom_bar(stat = "identity") + 
        theme(axis.text.x = element_text(angle=60,vjust=1,hjust=1)) +
        labs(title = "Deal(USD) by Sector & Investment Stage") +
        xlab("") +
        ylab("Deal(USD)")
```

```{r}
deals %>% filter(investment_stage != "Acquisition") %>%
         group_by(target_company, sector) %>%
         summarise(total_deal = sum(deal_value)) %>%
         top_n(10, total_deal) %>%
         arrange(desc(total_deal)) %>%
         print(n = Inf)
```

```{r}
df3 <- deals %>% group_by(investment_stage, announcement_date) %>%
          summarise(total_inv_cnt = sum(inv_count), total_deal = sum(deal_value))
```

```{r,warning=FALSE}
df3 %>% ggplot(aes(x = announcement_date, y = total_inv_cnt, color = investment_stage)) + 
        geom_point(aes(size = total_deal)) +
        scale_x_date(date_breaks="1 month", date_labels="%b") +
        labs(title = "Monthly Investor Count by Investment Stage") +
        xlab("Announcement Date") +
        ylab("Investor Count")
```

```{r}
df4 <- origins %>% 
  inner_join(deals, by = "ID")
```

```{r}
df5 <- df4 %>% 
        select(investor_origin.x, investment_stage) %>% 
        group_by(investment_stage, investor_origin.x) %>%
        summarise(count = n()) %>%
        arrange(desc(count)) %>%
        slice_max(count, n = 10)
```

```{r}
df5 %>% ggplot(aes(fill = investment_stage, x = investor_origin.x, y = count))  + 
        geom_bar(position="fill", stat = "identity") + 
        theme(axis.text.x = element_text(angle=90,vjust=1,hjust=1)) +
        labs(title = "Monthly Investor Origin Percentage by Investment Stage") +
        xlab("Investor Origin") +
        ylab("Investor Origin Percentage")
```

```{r}
df6 <- investors %>% 
        group_by(investor) %>%
        summarise(count = n()) %>%
        arrange(desc(count)) %>%
        slice_max(count, n = 5)
```

```{r}
df6 %>%
  ggplot(aes(x = "", y = count, fill= investor)) +
  geom_bar(stat="identity", width=1) +
  coord_polar("y", start=0) +
        labs(title = "Top 5 Investor") +
        xlab("") +
        ylab("")
```
