[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Summer Moon Progress Journal",
    "section": "",
    "text": "This progress journal covers SUMMER MOON’s work during their term at BDA 503 Fall 2022.\nEach section is an assignment or an individual work."
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1  Introduction",
    "section": "",
    "text": "See Knuth (1984) for additional discussion of literate programming.\n\n\n\n\nKnuth, Donald E. 1984. “Literate Programming.” Comput. J. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "2  Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever."
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Knuth, Donald E. 1984. “Literate Programming.” Comput.\nJ. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "assignment1.html",
    "href": "assignment1.html",
    "title": "1  Assignment 1",
    "section": "",
    "text": "Before starting EDA, it will be better to prepare the data. We will convert related data to appropriate data types. If we have proper data types, then we can easily use libraries and functions to manipulate the data.\nLoading libraries:\n\nlibrary(dplyr)\nlibrary(readxl)\nlibrary(lubridate)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(stringi)\nlibrary(hrbrthemes)\nlibrary(viridis)\nlibrary(scales)\n\noptions(dplyr.summarise.inform = FALSE)\n\nReading xls file:\n\ndeals<-read_excel(\"docs/startup_deals_2021.xlsx\")\n\nLet’s change the column names and look at the summary.\n\ndeals<-rename(deals,target_company=`Target Company`)\ndeals<-rename(deals,announcement_date=`Announcement Date`)\ndeals<-rename(deals,financial_investor=`Financial Investor`)\ndeals<-rename(deals,investor_origin=`Investor's Origin`)\ndeals<-rename(deals,stake=`Stake (%)`)\ndeals<-rename(deals,deal_value=`Deal Value (USD)`)\ndeals<-rename(deals,investment_stage=`Investment Stage`)\ndeals<-rename(deals,sector=`Sector`)\ndeals<-rename(deals,investor=`Investor`)\n\nChanging the class of “Announcement Data” column from character to date. Use built-in function -> “my” function from lubridate library.\n\ndeals$announcement_date<-my(deals$announcement_date)  \n\nChanging the class of “Stake (%)” from character to numeric. First erasing “%” character, dividing by 100 and then converting the numeric.\n\ndeals$stake<-as.numeric(sub(\"%\",\"\",deals$stake))\n\nChanging the class of “Deal Value (USD)” from character to numeric.\n\ndeals$deal_value<-as.numeric(deals$deal_value)\n\nLet’s fix the wrong values in column ‘Sector’\n\ndeals$sector[deals$sector == 'Telecpm'] <- 'Telecom'\ndeals$sector[deals$sector == 'Cybersec urity'] <- 'Cybersecurity'\ndeals$sector[deals$sector == 'B lockchain'] <- 'Blockchain'\ndeals$sector[deals$sector == 'Artificial intelligence'] <- 'Artificial Intelligence'\ndeals$sector[deals$sector == 'Diğital Comparison'] <- 'Digital Comparison'\ndeals$sector[deals$sector == 'I mage process'] <- 'Image process'\n\nLet’s add count values to comma separated values, investor_origin and investor.\n\ndeals$org_count <- lengths(strsplit(deals$investor_origin, \",\"))\ndeals$inv_count <- lengths(strsplit(deals$investor, \",\"))\n\n\ndeals <- deals %>% mutate(deal_value = ifelse(is.na(deal_value), 0, deal_value))\n\nLet’s look at the final types of all columns:\n\nglimpse(deals)\n\nRows: 297\nColumns: 12\n$ ID                 <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, …\n$ target_company     <chr> \"Abonesepeti\", \"Abrakadabra\", \"Ace Games\", \"Adlema\"…\n$ sector             <chr> \"SaaS\", \"Gaming\", \"Gaming\", \"Internet of things\", \"…\n$ investor           <chr> \"Keiretsu Forum, Berkan Burla\", \"WePlay Ventures\", …\n$ announcement_date  <date> 2021-06-01, 2021-12-01, 2021-04-01, 2021-06-01, 20…\n$ financial_investor <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Y…\n$ investor_origin    <chr> \"Turkey\", \"Turkey\", \"Turkey, USA\", \"Turkey\", \"Turke…\n$ stake              <dbl> 5.00, 5.00, NA, NA, NA, NA, 10.92, NA, NA, 15.38, N…\n$ deal_value         <dbl> 100000, 250000, 0, 120000, 100000, 1000000, 250000,…\n$ investment_stage   <chr> \"Seed Stage\", \"Seed Stage\", \"Seed Stage\", \"Seed Sta…\n$ org_count          <int> 1, 1, 2, 1, 1, 1, 2, 1, 1, 3, 1, 1, 1, 1, 2, 1, 1, …\n$ inv_count          <int> 2, 1, 5, 1, 2, 1, 4, 1, 1, 4, 5, 1, 1, 1, 2, 1, 1, …\n\n\nDataframes namely “origins” and “investors” are created in order to separate collapsed columns into multiple rows.\n\norigins <- deals %>% select(ID, investor_origin)\n\n\norigins <- separate_rows(origins, investor_origin, sep = \", \")\n\n\ninvestors <- deals %>% select(ID, investor)\n\n\ninvestors <- separate_rows(investors, investor, sep = \",\")"
  },
  {
    "objectID": "assignment1.html#eda-exploratory-data-analysis",
    "href": "assignment1.html#eda-exploratory-data-analysis",
    "title": "1  Assignment 1",
    "section": "EDA (Exploratory Data Analysis)",
    "text": "EDA (Exploratory Data Analysis)\n\ndf0 <- deals %>% \n  group_by(investment_stage) %>% \n  summarise(count = n(), total_deal = sum(deal_value))\n\n\ndf0 %>%\n  ggplot(aes(x = \"\", y = total_deal, fill= investment_stage)) +\n  geom_bar(stat=\"identity\", width=1) +\n  coord_polar(\"y\", start=0) +\n  labs(title = \"Deal(USD) by Investment Stage\") +\n  xlab(\"\") +\n  ylab(\"\")\n\n\n\n\n\ndf1 <- deals %>% group_by(announcement_date, investment_stage) %>% \n                summarise(total_deal = sum(deal_value))\n\n\ndf1 %>%\n  ggplot( aes(x=announcement_date, y=total_deal)) +\n    geom_line( aes(color=investment_stage), color=\"#69b3a2\", size=1.2 )+\n    scale_color_viridis(discrete = TRUE) +\n    theme(\n      legend.position=\"none\",\n      plot.title = element_text(size=14),\n      panel.grid = element_blank()\n    ) +\n    scale_x_date(date_breaks=\"1 month\", date_labels=\"%b\") +\n    theme(axis.text.x = element_text(angle=60,vjust=1,hjust=1)) +\n    labs(title = \"Monthly Deal(USD) by Investment Stage\") +\n    xlab(\"Announcement Date\") +\n    ylab(\"Deal(USD)\") +\n    facet_wrap(~investment_stage)\n\n\n\n\n\ndf1 %>% \n  pivot_wider(names_from = investment_stage, values_from = total_deal, values_fill = 0)\n\n# A tibble: 12 × 5\n# Groups:   announcement_date [12]\n   announcement_date Acquisition `Early VC Stage` `Seed Stage` `Later VC Stage`\n   <date>                  <dbl>            <dbl>        <dbl>            <dbl>\n 1 2021-01-01            3795461       128000000       3644220                0\n 2 2021-02-01           23507000              50       9646893                0\n 3 2021-03-01           14200000         2295571       7891111        300000000\n 4 2021-04-01             770331               0       3446473                0\n 5 2021-05-01                  0               0       6645833                0\n 6 2021-06-01            4000000       160227346       7676675        555000000\n 7 2021-07-01          767231000         2775796       4553192                0\n 8 2021-08-01         1496750000        24052936.     12342500         35000000\n 9 2021-09-01            1000000        14500000       6549644                0\n10 2021-10-01           10000000               0       6278078                0\n11 2021-11-01           47000000               0       9482056                0\n12 2021-12-01           61905000        36200000      12385295                0\n\n\n\ndf2 <- deals %>% filter(investment_stage != \"Acquisition\") %>%\n         group_by(investment_stage, sector) %>%\n         summarise(total_deal = sum(deal_value)) %>%\n         ungroup() %>%\n         top_n(20, total_deal) %>%\n         arrange(desc(total_deal))\n\n\ndf2 %>% ggplot(aes(x = reorder(sector, -total_deal), y = total_deal, fill = investment_stage)) +\n        geom_bar(stat = \"identity\") + \n        theme(axis.text.x = element_text(angle=60,vjust=1,hjust=1)) +\n        labs(title = \"Deal(USD) by Sector & Investment Stage\") +\n        xlab(\"\") +\n        ylab(\"Deal(USD)\")\n\n\n\n\n\ndeals %>% filter(investment_stage != \"Acquisition\") %>%\n         group_by(target_company, sector) %>%\n         summarise(total_deal = sum(deal_value)) %>%\n         ungroup() %>%\n         top_n(10, total_deal) %>%\n         arrange(desc(total_deal)) %>%\n         print(n = Inf)\n\n# A tibble: 10 × 3\n   target_company sector               total_deal\n   <chr>          <chr>                     <dbl>\n 1 Getir          Delivery & Logistics 1018000000\n 2 Dream Games    Gaming                155000050\n 3 Akinon         Ecommerce enabler      20000000\n 4 Servislet      Marketplace            12500000\n 5 Colendi        Fintech                12000000\n 6 RS Research    Deeptech               12000000\n 7 Tarfin         Agritech                8000000\n 8 hadi           Gaming                  5200000\n 9 Yolda.com      Delivery & Logistics    5000000\n10 Brew Games     Gaming                  4000000\n\n\n\ndf3 <- deals %>% group_by(investment_stage, announcement_date) %>%\n          summarise(total_inv_cnt = sum(inv_count), total_deal = sum(deal_value))\n\n\ndf3 %>% ggplot(aes(x = announcement_date, y = total_inv_cnt, color = investment_stage)) + \n        geom_point(aes(size = total_deal)) +\n        scale_x_date(date_breaks=\"1 month\", date_labels=\"%b\") +\n        labs(title = \"Monthly Investor Count by Investment Stage\") +\n        xlab(\"Announcement Date\") +\n        ylab(\"Investor Count\")\n\n\n\n\n\ndf4 <- origins %>% \n  inner_join(deals, by = \"ID\")\n\n\ndf5 <- df4 %>% \n        select(investor_origin.x, investment_stage) %>% \n        filter(investor_origin.x != 'NA') %>%\n        group_by(investment_stage, investor_origin.x) %>%\n        summarise(count = n()) %>%\n        arrange(desc(count))\n\n\ndf5 %>% ggplot(aes(fill = investment_stage, x = investor_origin.x, y = count))  + \n        geom_bar(position=\"fill\", stat = \"identity\") + \n        theme(axis.text.x = element_text(angle=90,vjust=1,hjust=1)) +\n        labs(title = \"Monthly Investor Origin Percentage by Investment Stage\") +\n        xlab(\"Investor Origin\") +\n        ylab(\"Investor Origin Percentage\")\n\n\n\n\n\ndf6 <- investors %>% \n        group_by(investor) %>%\n        summarise(count = n()) %>%\n        arrange(desc(count)) %>%\n        ungroup() %>%\n        slice_max(count, n = 5)\n\n\ndf6 %>%\n  ggplot(aes(x = 1, y = count, fill= reorder(investor, -count))) +\n  geom_bar(stat=\"identity\", width=1) +\n  guides(fill = guide_legend(title = \"Investor\"))+\n  coord_polar(\"y\", start=0) +\n        labs(title = \"Top 5 Investor\") +\n        xlab(\"\") +\n        ylab(\"\")"
  }
]