[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Summer Moon Progress Journal",
    "section": "",
    "text": "This progress journal covers SUMMER MOON’s work during their term at BDA 503 Fall 2022.\n\n\n\nBerk Özcan\nCanseza Avağ Erdurak\nEmre Çakmak\nMehmet Kemal Ucuzcu\nNihan Cinisli Köksoy\n\n\n\n\nOur group project is Summer Moon. It is about Population and Demography in Turkey based on TUIK data."
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1  Introduction",
    "section": "",
    "text": "See Knuth (1984) for additional discussion of literate programming.\n\n\n\n\nKnuth, Donald E. 1984. “Literate Programming.” Comput. J. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "2  Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever."
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Knuth, Donald E. 1984. “Literate Programming.” Comput.\nJ. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "assignment1.html",
    "href": "assignment1.html",
    "title": "1  Startup Deals",
    "section": "",
    "text": "Before starting EDA, it will be better to prepare the data. We will convert related data to appropriate data types. If we have proper data types, then we can easily use libraries and functions to manipulate the data.\nLoading libraries:\n\nlibrary(dplyr)\nlibrary(readxl)\nlibrary(lubridate)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(stringi)\nlibrary(hrbrthemes)\nlibrary(viridis)\nlibrary(scales)\nlibrary(knitr)\n\noptions(dplyr.summarise.inform = FALSE)\n\nReading xls file:\n\ndeals<-read_excel(\"docs/startup_deals_2021.xlsx\")\n\nLet’s change the column names and look at the summary.\n\nnew_cols <- c(\"ID\",\"target_company\",\"sector\",\"investor\",\"announcement_date\",\"financial_investor\"\n              ,\"investor_origin\",\"stake\",\"deal_value\",\"investment_stage\")\n\ncolnames(deals) <- new_cols\n\nChanging the class of “Announcement Data” column from character to date. Use built-in function -> “my” function from lubridate library.\n\ndeals$announcement_date<-my(deals$announcement_date)\n\nChanging the class of “Stake (%)” from character to numeric. First erasing “%” character, dividing by 100 and then converting the numeric.\n\ndeals$stake<-as.numeric(sub(\"%\",\"\",deals$stake))\n\nChanging the class of “Deal Value (USD)” from character to numeric.\n\ndeals$deal_value<-as.numeric(deals$deal_value)\n\nLet’s fix the wrong values in column ‘Sector’.\n\ndeals$sector[deals$sector == 'Telecpm'] <- 'Telecom'\ndeals$sector[deals$sector == 'Cybersec urity'] <- 'Cybersecurity'\ndeals$sector[deals$sector == 'B lockchain'] <- 'Blockchain'\ndeals$sector[deals$sector == 'Artificial intelligence'] <- 'Artificial Intelligence'\ndeals$sector[deals$sector == 'Diğital Comparison'] <- 'Digital Comparison'\ndeals$sector[deals$sector == 'I mage process'] <- 'Image process'\n\nLet’s add count values to comma separated values, investor_origin and investor.\n\ndeals$org_count <- lengths(strsplit(deals$investor_origin, \",\"))\ndeals$inv_count <- lengths(strsplit(deals$investor, \",\"))\n\n\ndeals <- deals %>% mutate(deal_value = ifelse(is.na(deal_value), 0, deal_value))\n\nLet’s look at the final types of all columns:\n\nglimpse(deals)\n\nRows: 297\nColumns: 12\n$ ID                 <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, …\n$ target_company     <chr> \"Abonesepeti\", \"Abrakadabra\", \"Ace Games\", \"Adlema\"…\n$ sector             <chr> \"SaaS\", \"Gaming\", \"Gaming\", \"Internet of things\", \"…\n$ investor           <chr> \"Keiretsu Forum, Berkan Burla\", \"WePlay Ventures\", …\n$ announcement_date  <date> 2021-06-01, 2021-12-01, 2021-04-01, 2021-06-01, 20…\n$ financial_investor <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Y…\n$ investor_origin    <chr> \"Turkey\", \"Turkey\", \"Turkey, USA\", \"Turkey\", \"Turke…\n$ stake              <dbl> 5.00, 5.00, NA, NA, NA, NA, 10.92, NA, NA, 15.38, N…\n$ deal_value         <dbl> 100000, 250000, 0, 120000, 100000, 1000000, 250000,…\n$ investment_stage   <chr> \"Seed Stage\", \"Seed Stage\", \"Seed Stage\", \"Seed Sta…\n$ org_count          <int> 1, 1, 2, 1, 1, 1, 2, 1, 1, 3, 1, 1, 1, 1, 2, 1, 1, …\n$ inv_count          <int> 2, 1, 5, 1, 2, 1, 4, 1, 1, 4, 5, 1, 1, 1, 2, 1, 1, …\n\n\nDataframes namely “origins” and “investors” are created in order to separate collapsed columns into multiple rows.\n\norigins <- deals %>% select(ID, investor_origin)\n\n\norigins <- separate_rows(origins, investor_origin, sep = \", \")\n\n\ninvestors <- deals %>% select(ID, investor)\n\n\ninvestors <- separate_rows(investors, investor, sep = \", \")"
  },
  {
    "objectID": "assignment1.html#eda-exploratory-data-analysis",
    "href": "assignment1.html#eda-exploratory-data-analysis",
    "title": "1  Startup Deals",
    "section": "EDA (Exploratory Data Analysis)",
    "text": "EDA (Exploratory Data Analysis)\nThe chart gives information about how much dollars was invested on start-ups in 2011.\nFrom the pie chart it is clear that the majority of investments are made at acquisition stage with 64%. Later VC Stage, Early VC Stage and Seed Stage follows the first one with 24%, 10% and 2% respectively.\n\ndf0 <- deals %>% \n       group_by(investment_stage) %>% \n       summarise(count = n(), total_deal = sum(deal_value)) %>%\n       mutate(deal_perc = scales::percent(round(total_deal / sum(total_deal), 2)))\n\n\ndf0 %>%\n  ggplot(aes(x = \"\", y = deal_perc, fill= investment_stage)) +\n  geom_bar(stat=\"identity\", width=1) +\n  geom_text(aes(label = deal_perc),\n            position = position_stack(vjust = 0.5)) +\n  coord_polar(\"y\", start=0) +\n  labs(title = \"Total Deal(USD) by Investment Stage\") +\n  xlab(\"\") +\n  ylab(\"\")\n\n\n\n\nThe graph illustrates monthly trends by investment stage. There has been a sharp increase in investments at acquisition stage on August. Investments at Later VC Stage started to grow after March, peaked on June, the downturn began after June. Seed Stage investments have been on the same level over the year. Early VC Stage investments have peaked on June like Later VC Stage investments.\n\ndf1 <- deals %>% group_by(announcement_date, investment_stage) %>% \n                summarise(total_deal = sum(deal_value))\n\n\ndf1 %>%\n  ggplot( aes(x=announcement_date, y=total_deal)) +\n    geom_line( aes(color=investment_stage), color=\"#69b3a2\", size=1.2 )+\n    scale_color_viridis(discrete = TRUE) +\n    theme(\n      legend.position=\"none\",\n      plot.title = element_text(size=14),\n      panel.grid = element_blank()\n    ) +\n    scale_x_date(date_breaks=\"1 month\", date_labels=\"%b\") +\n    theme(axis.text.x = element_text(angle=60,vjust=1,hjust=1)) +\n    labs(title = \"Monthly Deal(USD) by Investment Stage\") +\n    xlab(\"Announcement Date\") +\n    ylab(\"Deal(USD)\") +\n    facet_wrap(~investment_stage)\n\n\n\n\nThe pivot table shows the detailed version of the graph below.\n\ndf1 %>% \n  pivot_wider(names_from = investment_stage, values_from = total_deal, values_fill = 0)\n\n# A tibble: 12 × 5\n# Groups:   announcement_date [12]\n   announcement_date Acquisition `Early VC Stage` `Seed Stage` `Later VC Stage`\n   <date>                  <dbl>            <dbl>        <dbl>            <dbl>\n 1 2021-01-01            3795461       128000000       3644220                0\n 2 2021-02-01           23507000              50       9646893                0\n 3 2021-03-01           14200000         2295571       7891111        300000000\n 4 2021-04-01             770331               0       3446473                0\n 5 2021-05-01                  0               0       6645833                0\n 6 2021-06-01            4000000       160227346       7676675        555000000\n 7 2021-07-01          767231000         2775796       4553192                0\n 8 2021-08-01         1496750000        24052936.     12342500         35000000\n 9 2021-09-01            1000000        14500000       6549644                0\n10 2021-10-01           10000000               0       6278078                0\n11 2021-11-01           47000000               0       9482056                0\n12 2021-12-01           61905000        36200000      12385295                0\n\n\nThe below chart shows the total investment values for the top 10 sectors and the number of investments at different times.\n\n  deals %>%\n    filter(deal_value != 0) %>%\n    group_by(sector) %>%  \n    dplyr::summarise(nb_of_investment = n(), total_deal_value = sum(deal_value)) %>%\n    arrange(desc(total_deal_value)) %>%\n    top_n(10)  %>%\n    ggplot(aes(fill = sector, y = format(total_deal_value, scientific = FALSE, big.mark = \",\") , x = reorder(sector, -total_deal_value)) ) + \n    geom_bar(position=\"stack\", stat = \"identity\", show.legend = FALSE) +\n    theme(axis.text.x = element_text(angle=60,vjust=1,hjust=1)) +\n    labs(title = \"Top 10 Deal(USD) by Sector\") +\n    xlab(\"\") +\n    ylab(\"Deal(USD)\") +\n    geom_text(aes(label = nb_of_investment), vjust = - 1)\n\n\n\n\nThe chart gives information about how much investment has been made on sectors. Early VC Stage investments have been distributed over many sectors while Later VC Stage investments have been dominated in Delivery&Logistics sector.\n\ndf2 <- deals %>% filter(investment_stage != \"Acquisition\") %>%\n         group_by(investment_stage, sector) %>%\n         summarise(total_deal = sum(deal_value)) %>%\n         ungroup() %>%\n         top_n(20, total_deal) %>%\n         arrange(desc(total_deal))\n\n\ndf2 %>% ggplot(aes(x = reorder(sector, -total_deal), y = total_deal, fill = investment_stage)) +\n        geom_bar(stat = \"identity\") + \n        theme(axis.text.x = element_text(angle=60,vjust=1,hjust=1)) +\n        labs(title = \"Deal(USD) by Sector & Investment Stage\") +\n        xlab(\"\") +\n        ylab(\"Deal(USD)\")\n\n\n\n\nGetir has reached the largest deal volume from a variety of investors. Dream Games and Akinon attracted the most investments by deal volume respectively.\n\ndf8 <- deals %>% filter(investment_stage != \"Acquisition\") %>%\n         group_by(target_company, sector) %>%\n         summarise(total_deal = sum(deal_value), total_inv_count = sum(inv_count)) %>%\n         ungroup() %>%\n         top_n(10, total_deal) %>%\n         arrange(desc(total_deal)) %>%\n         mutate(total_deal=format(total_deal, scientific = FALSE, big.mark = \",\"))\n\nknitr::kable(df8, format.args = list(big.mark = \",\",scientific = FALSE))\n\n\n\n\ntarget_company\nsector\ntotal_deal\ntotal_inv_count\n\n\n\n\nGetir\nDelivery & Logistics\n1,018,000,000\n21\n\n\nDream Games\nGaming\n155,000,050\n8\n\n\nAkinon\nEcommerce enabler\n20,000,000\n4\n\n\nServislet\nMarketplace\n12,500,000\n3\n\n\nColendi\nFintech\n12,000,000\n1\n\n\nRS Research\nDeeptech\n12,000,000\n3\n\n\nTarfin\nAgritech\n8,000,000\n5\n\n\nhadi\nGaming\n5,200,000\n2\n\n\nYolda.com\nDelivery & Logistics\n5,000,000\n6\n\n\nBrew Games\nGaming\n4,000,000\n1\n\n\n\n\n\nThis chart shows the top 10 companies with the highest investment value in 2021 and the number of investments at different times. Explicitly seen that the top 3 companies that received the most investment is online marketing.\n\ndeals %>%\n  filter(deal_value != 0) %>%\n  group_by(target_company) %>%  \n  dplyr::summarise(nb_of_investment = n(), total_deal_value = sum(deal_value)) %>%\n  arrange(desc(total_deal_value)) %>%\n  top_n(10)  %>%\n  ggplot(aes(fill = target_company, y = format(total_deal_value, scientific = FALSE, big.mark = \",\") , x = reorder(target_company, -total_deal_value)) ) + \n    geom_bar(position=\"stack\", stat = \"identity\", show.legend = FALSE) +\n    theme(axis.text.x = element_text(angle=60,vjust=1,hjust=1)) +\n    labs(title = \"Top 10 Deal(USD) by Company\") +\n    xlab(\"\") +\n    ylab(\"Deal(USD)\") +\n      geom_text(aes(label = nb_of_investment), vjust = - 1)\n\n\n\n\nThe below table analyzes which sectors received investment from different investors in 2021. Regardless of the total investment value, investors are attracted by the gaming sector. (Analyzes were made for unique investors.)\n\n  df_investor_by_sector = deals %>%\n      select(ID, target_company, sector) %>%\n      full_join(investors, by = \"ID\") %>%\n        group_by(sector) %>%  \n      dplyr::summarise(nb_of_investors = n_distinct(investor)) %>%\n                       arrange(desc(nb_of_investors))\n\n  df_dealvalue_by_sector = deals %>%\n    group_by(sector) %>%  \n     dplyr::summarise(total_deal_value = sum(deal_value)) %>%\n    arrange(desc(total_deal_value))  \n\n\n  df_join <- inner_join(df_investor_by_sector, df_dealvalue_by_sector, by=\"sector\") %>%\n               mutate(total_deal_value = format(total_deal_value, scientific = FALSE, big.mark = \",\")) %>%\n              top_n(10)\n  \n  knitr::kable(df_join, align=\"llr\", format.args = list(big.mark = \",\",scientific = FALSE))\n\n\n\n\nsector\nnb_of_investors\ntotal_deal_value\n\n\n\n\nGaming\n63\n221,235,284.00\n\n\nMarketplace\n52\n26,477,315.00\n\n\nSaaS\n47\n84,053,230.00\n\n\nDelivery & Logistics\n41\n1,027,811,561.00\n\n\nFintech\n37\n28,894,578.00\n\n\nEcommerce enabler\n24\n2,218,940,063.00\n\n\nMobility\n17\n25,905,560.00\n\n\nDeeptech\n16\n16,457,491.00\n\n\nEnergy\n15\n21,608,314.00\n\n\nMedia\n15\n21,759,000.00\n\n\n\n\n\nThe graph displays how investor counts change over months as well as point sizes show deal volumes. Investor counts on Seed Stage investments are higher than all other stages. However deal volumes at this stage are lower than the other ones.\n\ndf3 <- deals %>% group_by(investment_stage, announcement_date) %>%\n          summarise(total_inv_cnt = sum(inv_count), total_deal = sum(deal_value))\n\n\ndf3 %>% ggplot(aes(x = announcement_date, y = total_inv_cnt, color = investment_stage)) + \n        geom_point(aes(size = total_deal)) +\n        scale_x_date(date_breaks=\"1 month\", date_labels=\"%b\") +\n        labs(title = \"Monthly Number of Investors by Investment Stage\") +\n        xlab(\"Announcement Date\") +\n        ylab(\"Number of Investors\")\n\n\n\n\nThe graph displays how countries’ investments vary by stages. In Turkey, highest number of deals are made at Seed Stage.\n\ndf4 <- origins %>% \n  inner_join(deals, by = \"ID\")\n\n\ndf5 <- df4 %>% \n        select(investor_origin.x, investment_stage) %>% \n        filter(investor_origin.x != 'NA') %>%\n        group_by(investment_stage, investor_origin.x) %>%\n        summarise(count = n()) %>%\n        arrange(desc(count))\n\n\ndf5 %>% ggplot(aes(fill = investment_stage, x = investor_origin.x, y = count))  + \n        geom_bar(position=\"fill\", stat = \"identity\") + \n        theme(axis.text.x = element_text(angle=90,vjust=1,hjust=1)) +\n        labs(title = \"Monthly Percentage of Deals by Investment Stage\") +\n        xlab(\"Investor Origin\") +\n        ylab(\"Percentage of Deals\")\n\n\n\n\nThis pie-chart illustrates top-5 investors by number of deals.\n\ndf6 <- investors %>% \n        group_by(investor) %>%\n        summarise(count = n()) %>%\n        arrange(desc(count)) %>%\n        ungroup() %>%\n        slice_max(count, n = 5)\n\n\ndf6 %>%\n  ggplot(aes(x = 1, y = count, fill= reorder(investor, -count))) +\n  geom_bar(stat=\"identity\", width=1) +\n  guides(fill = guide_legend(title = \"Investor\"))+\n  coord_polar(\"y\", start=0) +\n        labs(title = \"Top 5 Investor\") +\n        xlab(\"\") +\n        ylab(\"\")\n\n\n\n\nThe below table shows the number of investments for each investor.\n\ndf7 <- deals %>%\n  select(ID, target_company, sector) %>%\n  full_join(investors, by = \"ID\") %>%\n  group_by(investor) %>%  \n  dplyr::summarise(nb_of_sector = n_distinct(sector)) %>%\n  arrange(desc(nb_of_sector)) %>%\n  top_n(10)\n\nknitr::kable(df7, format.args = list(big.mark = \",\",scientific = FALSE))\n\n\n\n\ninvestor\nnb_of_sector\n\n\n\n\nfonbulucu.com\n15\n\n\nAlesta Yatırım\n14\n\n\nKeiretsu Forum\n10\n\n\nTechOne\n9\n\n\nKültepe Yatırım\n8\n\n\nLima Ventures\n6\n\n\nUndisclosed Investor\n6\n\n\nActera Group\n5\n\n\nGalata Business Angels (GBA)\n5\n\n\nTR Angels\n5"
  },
  {
    "objectID": "assignment1.html#data-wrangling",
    "href": "assignment1.html#data-wrangling",
    "title": "1  Assignment 1",
    "section": "DATA WRANGLING",
    "text": "DATA WRANGLING\nBefore starting EDA, it will be better to prepare the data. We will convert related data to appropriate data types. If we have proper data types, then we can easily use libraries and functions to manipulate the data.\nLoading libraries:\n\nlibrary(dplyr)\nlibrary(readxl)\nlibrary(lubridate)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(stringi)\nlibrary(hrbrthemes)\nlibrary(viridis)\nlibrary(scales)\n\noptions(dplyr.summarise.inform = FALSE)\n\nReading xls file:\n\ndeals<-read_excel(\"docs/startup_deals_2021.xlsx\")\n\nLet’s change the column names and look at the summary.\n\nnew_cols <- c(\"ID\",\"target_company\",\"sector\",\"investor\",\"announcement_date\",\"financial_investor\"\n              ,\"investor_origin\",\"stake\",\"deal_value\",\"investment_stage\")\n\ncolnames(deals) <- new_cols\n\nChanging the class of “Announcement Data” column from character to date. Use built-in function -> “my” function from lubridate library.\n\ndeals$announcement_date<-my(deals$announcement_date)  \n\nChanging the class of “Stake (%)” from character to numeric. First erasing “%” character, dividing by 100 and then converting the numeric.\n\ndeals$stake<-as.numeric(sub(\"%\",\"\",deals$stake))\n\nChanging the class of “Deal Value (USD)” from character to numeric.\n\ndeals$deal_value<-as.numeric(deals$deal_value)\n\nLet’s fix the wrong values in column ‘Sector’\n\ndeals$sector[deals$sector == 'Telecpm'] <- 'Telecom'\ndeals$sector[deals$sector == 'Cybersec urity'] <- 'Cybersecurity'\ndeals$sector[deals$sector == 'B lockchain'] <- 'Blockchain'\ndeals$sector[deals$sector == 'Artificial intelligence'] <- 'Artificial Intelligence'\ndeals$sector[deals$sector == 'Diğital Comparison'] <- 'Digital Comparison'\ndeals$sector[deals$sector == 'I mage process'] <- 'Image process'\n\nLet’s add count values to comma separated values, investor_origin and investor.\n\ndeals$org_count <- lengths(strsplit(deals$investor_origin, \",\"))\ndeals$inv_count <- lengths(strsplit(deals$investor, \",\"))\n\n\ndeals <- deals %>% mutate(deal_value = ifelse(is.na(deal_value), 0, deal_value))\n\nLet’s look at the final types of all columns:\n\nglimpse(deals)\n\nRows: 297\nColumns: 12\n$ ID                 <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, …\n$ target_company     <chr> \"Abonesepeti\", \"Abrakadabra\", \"Ace Games\", \"Adlema\"…\n$ sector             <chr> \"SaaS\", \"Gaming\", \"Gaming\", \"Internet of things\", \"…\n$ investor           <chr> \"Keiretsu Forum, Berkan Burla\", \"WePlay Ventures\", …\n$ announcement_date  <date> 2021-06-01, 2021-12-01, 2021-04-01, 2021-06-01, 20…\n$ financial_investor <chr> \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Yes\", \"Y…\n$ investor_origin    <chr> \"Turkey\", \"Turkey\", \"Turkey, USA\", \"Turkey\", \"Turke…\n$ stake              <dbl> 5.00, 5.00, NA, NA, NA, NA, 10.92, NA, NA, 15.38, N…\n$ deal_value         <dbl> 100000, 250000, 0, 120000, 100000, 1000000, 250000,…\n$ investment_stage   <chr> \"Seed Stage\", \"Seed Stage\", \"Seed Stage\", \"Seed Sta…\n$ org_count          <int> 1, 1, 2, 1, 1, 1, 2, 1, 1, 3, 1, 1, 1, 1, 2, 1, 1, …\n$ inv_count          <int> 2, 1, 5, 1, 2, 1, 4, 1, 1, 4, 5, 1, 1, 1, 2, 1, 1, …\n\n\nDataframes namely “origins” and “investors” are created in order to separate collapsed columns into multiple rows.\n\norigins <- deals %>% select(ID, investor_origin)\n\n\norigins <- separate_rows(origins, investor_origin, sep = \", \")\n\n\ninvestors <- deals %>% select(ID, investor)\n\n\ninvestors <- separate_rows(investors, investor, sep = \", \")"
  },
  {
    "objectID": "assignment1.html#conclusion",
    "href": "assignment1.html#conclusion",
    "title": "1  Startup Deals",
    "section": "CONCLUSION",
    "text": "CONCLUSION\n\nWe can see that the first 3 sectors with the most investments, considering the total value, are the E-commerce enabler, Delivery and Logistics and Game sectors. Trendyol and Hepsiburada are the companies that receive the most investment, accounting for 58% of the total investment. The reason for this high rate is that the investment stage of the two companies is “Acquisition”.\nAlthough the largest number of investors is in the gaming sector, the investment amount constitutes about 6% of the total investment amount. The main reason for this is that investment stages are mostly “Seed stages”.\nIf we look at the investments where the investor is only from Turkey, it constitutes 5% of the entire investment rate and mostly constitutes the investment stage as the “Seed Stage”.\nWhen we look at the top 3 companies with the highest number of investors, we see that these are Getir, Dream Games and Akinon. We see that a high percentage of these investors are from outside Turkey.\nWhen we look at the companies that invest in more than one sector, we see that these companies are mostly Turkish companies.\nFinally, although we do not have data from previous years, we think that the pandemic has also affected the sectors invested in in 2021. We see that the E-commerce enabler, Delivery and Logistics sectors have grown significantly with the pandemic."
  },
  {
    "objectID": "tuik_preprocessing.html",
    "href": "tuik_preprocessing.html",
    "title": "2  TUIK Preprocessing",
    "section": "",
    "text": "We stored Tuik data in separate sheets in Excel, so firstly we read all sheets and store them separately in tables in R.\n\nlibrary(readxl)\nlibrary(openxlsx)\n  \npath <- \"docs/SummerMoon - TUIK - Issizlik Dataset.xlsx\"\n\n# getting data from sheets\nsheets <- openxlsx::getSheetNames(path)\ndata_frame <- lapply(sheets, openxlsx::read.xlsx, xlsxFile=path)\n\n# assigning names to data frame\nnames(data_frame) <- sheets\n\n# printing the data\n#print (data_frame)\n\nlist2env(data_frame, envir = .GlobalEnv)\n\nlapply(names(data_frame), function(x)\n  assign(x, data_frame[[x]], envir = .GlobalEnv)\n)"
  },
  {
    "objectID": "tuik_preprocessing.html#we-stored-tuik-data-in-separate-sheets-in-excel-so-firstly-we-read-all-sheets-and-store-them-separately-in-tables-in-r.",
    "href": "tuik_preprocessing.html#we-stored-tuik-data-in-separate-sheets-in-excel-so-firstly-we-read-all-sheets-and-store-them-separately-in-tables-in-r.",
    "title": "2  TUIK Preprocessing",
    "section": "2.1 We stored Tuik data in separate sheets in Excel, so firstly we read all sheets and store them separately in tables in R.",
    "text": "2.1 We stored Tuik data in separate sheets in Excel, so firstly we read all sheets and store them separately in tables in R.\n\nlibrary(readxl)\nlibrary(openxlsx)\n  \npath <- \"docs/SummerMoon - TUIK - Issizlik Dataset.xlsx\"\n\n# getting data from sheets\nsheets <- openxlsx::getSheetNames(path)\ndata_frame <- lapply(sheets, openxlsx::read.xlsx, xlsxFile=path)\n\n# assigning names to data frame\nnames(data_frame) <- sheets\n\n# printing the data\n#print (data_frame)\n\nlist2env(data_frame, envir = .GlobalEnv)\n\nlapply(names(data_frame), function(x)\n  assign(x, data_frame[[x]], envir = .GlobalEnv)\n)"
  },
  {
    "objectID": "tuik_preprocessing.html#here-are-our-tables-which-we-analyze-later.",
    "href": "tuik_preprocessing.html#here-are-our-tables-which-we-analyze-later.",
    "title": "2  TUIK Preprocessing",
    "section": "2.2 Here are our tables which we analyze later.",
    "text": "2.2 Here are our tables which we analyze later.\n\nnames(data_frame)\n\n [1] \"index\"                           \"Labour_force_by_household_pop\"  \n [3] \"Labour_force_status_by_reg\"      \"Employed_rate_by_marital_status\"\n [5] \"Unemployment_rate\"               \"Youth_unemployment_rate\"        \n [7] \"Reasons_of_not_being_in_lab_for\" \"Perc_of_pop_by_mar_status\"      \n [9] \"Mean_age_of_mother_by_Statistic\" \"Births_by_mothers_age_edu_grp\"  \n[11] \"Crude_divorce_rate_by_provinces\" \"Births_of_mothers_by_reg_mar_st\"\n[13] \"Mean_age_first_marriage_by_prvn\" \"Divorces_by_provinces\"          \n[15] \"Birth_by_prov_mother_dur_of_mar\" \"Pop_by_province_place_birth_sta\"\n[17] \"Employment_by_occup_group\""
  },
  {
    "objectID": "tuik_preprocessing.html#lastly-we-convert-all-tables-into-rdata-format-and-stored-them-in-the-docs-folder.",
    "href": "tuik_preprocessing.html#lastly-we-convert-all-tables-into-rdata-format-and-stored-them-in-the-docs-folder.",
    "title": "2  TUIK Preprocessing",
    "section": "2.3 Lastly, we convert all tables into RData format and stored them in the docs folder.",
    "text": "2.3 Lastly, we convert all tables into RData format and stored them in the docs folder.\n\nfor(p in c(seq(1, length(names(data_frame)) ,1))) { \n  for(i in list(names(data_frame))){\n    a <- noquote(i)\n    save(a, file = paste(\"docs/tuik/\", a[p], \".RData\"))\n  }\n}"
  },
  {
    "objectID": "tuik_preprocessing.html#dataframes",
    "href": "tuik_preprocessing.html#dataframes",
    "title": "2  TUIK Preprocessing",
    "section": "2.2 Dataframes",
    "text": "2.2 Dataframes\nHere are our tables which we analyze later.\n\nnames(data_frame)\n\n [1] \"index\"                           \"Labour_force_by_household_pop\"  \n [3] \"Labour_force_status_by_reg\"      \"Employed_rate_by_marital_status\"\n [5] \"Unemployment_rate\"               \"Youth_unemployment_rate\"        \n [7] \"Reasons_of_not_being_in_lab_for\" \"Perc_of_pop_by_mar_status\"      \n [9] \"Mean_age_of_mother_by_Statistic\" \"Births_by_mothers_age_edu_grp\"  \n[11] \"Crude_divorce_rate_by_provinces\" \"Births_of_mothers_by_reg_mar_st\"\n[13] \"Mean_age_first_marriage_by_prvn\" \"Divorces_by_provinces\"          \n[15] \"Birth_by_prov_mother_dur_of_mar\" \"Pop_by_province_place_birth_sta\"\n[17] \"Employment_by_occup_group\""
  },
  {
    "objectID": "tuik_preprocessing.html#converting-to-rdata",
    "href": "tuik_preprocessing.html#converting-to-rdata",
    "title": "2  TUIK Preprocessing",
    "section": "2.3 Converting to RData",
    "text": "2.3 Converting to RData\nLastly, we convert all tables into RData format and stored them in the ~/docs/tuik folder.\nPlease click to see RData files\n\nfor(p in c(seq(1, length(names(data_frame)) ,1))) { \n  for(i in list(names(data_frame))){\n    a <- noquote(i)\n    save(a, file = paste(\"docs/tuik/\", a[p], \".RData\"))\n  }\n}"
  },
  {
    "objectID": "tuik_eda.html",
    "href": "tuik_eda.html",
    "title": "3  TUIK EDA",
    "section": "",
    "text": "Exploratory Data Analysis (EDA)"
  },
  {
    "objectID": "tuik_eda.html#data-dictionary",
    "href": "tuik_eda.html#data-dictionary",
    "title": "3  TUIK EDA",
    "section": "3.1 Data Dictionary",
    "text": "3.1 Data Dictionary\nNon-institutional population: Comprises all the population excluding the residents of dormitories of universities, orphanage, rest homes for elderly persons, special hospitals, prisons and military barracks etc.\n\nNon-institutional working age population: Indicates the population 15 years old and over within the non-institutional civilian population.\n\nLabour force: Labour force covers the working-age population that is willing to supply labour for the production of economic goods and services in the relevant reference period. In determining the labour force, activities that contribute to the production of goods and services within the United Nations System of National Accounts (SNA) production boundary are essential. Labour force comprises all employed and unemployed people. \n\nLabour force participation rate: Indicates the ratio of the labour force to non-institutional working age population.\n\nEmployment: Comprises all the non-institutional working age population who are included in the persons “at work” and “not at work” described below.\n\n\nPersons at work: Persons economically active during the reference period for at least one hour as a regular employee, casual employee, employer, self employed or unpaid family worker.\n\nPersons not at work: Regular employee, casual employee, employer, self employed or unpaid family who have a job but away from job during the entire reference week for various reasons are considered as employed, if there is a tie with job according to the absence reason from job.\n\nPersons who are not at work during the reference week due to official holidays or annual leave, sick leave, working hour arrangements, job related training or legal maternity/paternity leave are employed without the need for additional criteria.\n\nPersons who are not at work to raise a child (parental leave, unpaid leave for childcare) are considered as employed only if they have an assurance of return to work within a period of less than 3 months or less and/or they continue to receive job related wage/salary during their absence.\n\nPersons who are not at work because of off-season/low season are considered as employed only if they performing any task or duty during the off-season period.\n\nPersons who are not at work due to the other reasons such as bad weather, there was no work, slowing down or stopping of work for technical or economic reasons, participating a training unrelated to job are considered as employed only if they have an assurance of return to work within a period of 3 months or less.\n\nThe members of producer cooperatives and apprentices or trainees who are working to gain any kind of benefit (income in cash or in kind, social security, traveling cost, pocket money etc.) are considered to be employed.\n\nEmployment Rate: It is the ratio of employment to the non-institutional working age population.\nUnemployment rate: It is the ratio of unemployed persons to the labour force.\n\nReference :\nhttps://data.tuik.gov.tr/Search/Search?text=employment%20rate"
  },
  {
    "objectID": "tuik_eda.html#analysis",
    "href": "tuik_eda.html#analysis",
    "title": "3  TUIK EDA",
    "section": "3.2 Analysis",
    "text": "3.2 Analysis\nFirst of all, libraries are installed.\n\npti <- c(\"readxl\",\"dplyr\",\"tidyverse\", \"ggplot2\", \"lubridate\", \"tidyr\", \"stringi\", \"hrbrthemes\", \"viridis\", \"scales\", \"knitr\")\npti <- pti[!(pti %in% installed.packages())]\nif(length(pti)>0){\n  install.packages(pti)\n}\n\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(lubridate)\nlibrary(tidyr)\nlibrary(stringi)\nlibrary(hrbrthemes)\nlibrary(viridis)\nlibrary(scales)\nlibrary(knitr)\n\nData files are read in Excel.\n\nlabour_force_status_by_reg <- read_excel(\"docs/SummerMoon - TUIK - Issizlik Dataset.xlsx\", sheet = \"Labour_force_status_by_reg\")\n\n\nmean_age_of_mother_by_statistic <- read_excel(\"docs/SummerMoon - TUIK - Issizlik Dataset.xlsx\", sheet = \"Mean_age_of_mother_by_Statistic\")\n\n\nreasons_of_not_being_in_lab_for <- read_excel(\"docs/SummerMoon - TUIK - Issizlik Dataset.xlsx\", sheet = \"Reasons_of_not_being_in_lab_for\")\n\n\nemployed_rate_by_marital_status <- read_excel(\"docs/SummerMoon - TUIK - Issizlik Dataset.xlsx\", sheet = \"Employed_rate_by_marital_status\")\n\nfemale<-employed_rate_by_marital_status%>%filter(gender==\"Female\")\nmale<-employed_rate_by_marital_status%>%filter(gender==\"Male\")\n\n\ncrude_divorce_rate_by_provinces <- read_excel(\"docs/SummerMoon - TUIK - Issizlik Dataset.xlsx\", sheet = \"Crude_divorce_rate_by_provinces\")\n\nDescriptive statistics are given for high-level understanding of each data table.\n\nsummary(labour_force_status_by_reg)\n\n      year         region             gender         \n Min.   :2014   Length:208         Length:208        \n 1st Qu.:2016   Class :character   Class :character  \n Median :2018   Mode  :character   Mode  :character  \n Mean   :2018                                        \n 3rd Qu.:2019                                        \n Max.   :2021                                        \n labour_force_participation_rate unemployment_rate employment_rate \n Min.   :0.1620                  Min.   :0.0290    Min.   :0.1420  \n 1st Qu.:0.3280                  1st Qu.:0.0800    1st Qu.:0.2800  \n Median :0.5375                  Median :0.1095    Median :0.4500  \n Mean   :0.5142                  Mean   :0.1132    Mean   :0.4594  \n 3rd Qu.:0.7060                  3rd Qu.:0.1472    3rd Qu.:0.6452  \n Max.   :0.7740                  Max.   :0.2310    Max.   :0.6920  \n\n\n\nsummary(mean_age_of_mother_by_statistic)\n\n    region            district         province_id          province        \n Length:1053        Length:1053        Length:1053        Length:1053       \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n      year      mother_mean_age\n Min.   :2009   Min.   :25.77  \n 1st Qu.:2012   1st Qu.:27.58  \n Median :2015   Median :28.23  \n Mean   :2015   Mean   :28.20  \n 3rd Qu.:2018   3rd Qu.:28.82  \n Max.   :2021   Max.   :30.52  \n\n\n\nsummary(reasons_of_not_being_in_lab_for)\n\n      year         gender             reason          pop_not_in_lab_force\n Min.   :2014   Length:128         Length:128         Min.   :       0    \n 1st Qu.:2016   Class :character   Class :character   1st Qu.:  362250    \n Median :2018   Mode  :character   Mode  :character   Median : 1212000    \n Mean   :2018                                         Mean   : 1818773    \n 3rd Qu.:2019                                         3rd Qu.: 2260000    \n Max.   :2021                                         Max.   :11589000    \n\n\n\nsummary(employed_rate_by_marital_status)\n\n      year         gender          marital_status     employed_rate   \n Min.   :2014   Length:64          Length:64          Min.   :0.0650  \n 1st Qu.:2016   Class :character   Class :character   1st Qu.:0.2525  \n Median :2018   Mode  :character   Mode  :character   Median :0.3525  \n Mean   :2018                                         Mean   :0.3897  \n 3rd Qu.:2019                                         3rd Qu.:0.5593  \n Max.   :2021                                         Max.   :0.7279  \n\n\n\nsummary(crude_divorce_rate_by_provinces)\n\n   province              year      crude_divorce_rate\n Length:810         Min.   :2012   Min.   :0.1129    \n Class :character   1st Qu.:2014   1st Qu.:0.9894    \n Mode  :character   Median :2016   Median :1.4774    \n                    Mean   :2016   Mean   :1.4206    \n                    3rd Qu.:2019   3rd Qu.:1.8818    \n                    Max.   :2021   Max.   :3.0363    \n\n\nAfter this section, data visualizations are made to have a better understanding about data.\n\nlabour_force_status_by_reg %>%\n  filter(region == \"Total\") %>%\n  select(year, gender, labour_force_participation_rate, employment_rate, unemployment_rate) %>%\n   pivot_longer(cols = -c(gender, year), values_to = \"value\", names_to = \"variable\") %>% \n  ggplot(aes(x = year, y = value, fill = reorder(variable, value))) + \n  geom_bar(position=\"dodge\", stat=\"identity\") +\n  facet_grid(. ~ gender) +\n    scale_x_continuous(breaks = c(min(labour_force_status_by_reg$year):max(labour_force_status_by_reg$year))) +\n  theme(axis.text.x = element_text(angle=90,vjust=1,hjust=1), legend.position=\"top\", legend.title=element_blank()) + \n  coord_flip() +\n  labs(title = \"Labour Force Rates by Gender\")\n\n\n\n\n\nlabour_force_status_by_reg %>%\n  filter(region != \"Total\") %>%\n  ggplot() + \n  geom_line(aes(x = year, y = labour_force_participation_rate, color = gender)) + \n  facet_wrap( ~ region) +\n    scale_x_continuous(breaks = c(min(labour_force_status_by_reg$year):max(labour_force_status_by_reg$year))) + \n  theme(axis.text.x = element_text(angle=90,vjust=1,hjust=1)) +\n  labs(title = \"Labour Force Participation Rate by Region\")\n\n\n\n\n\nlabour_force_status_by_reg %>%\n  filter(region != \"Total\") %>%\n  ggplot() + \n  geom_line(aes(x = year, y = employment_rate, color = gender)) + \n  facet_wrap( ~ region) +\n    scale_x_continuous(breaks = c(min(labour_force_status_by_reg$year):max(labour_force_status_by_reg$year))) + \n  theme(axis.text.x = element_text(angle=90,vjust=1,hjust=1)) +\n  labs(title = \"Employment Rate by Region\")\n\n\n\n\n\nlabour_force_status_by_reg %>%\n  filter(region != \"Total\") %>%\n  ggplot() + \n  geom_line(aes(x = year, y = unemployment_rate, color = gender)) + \n  facet_wrap( ~ region) +\n    scale_x_continuous(breaks = c(min(labour_force_status_by_reg$year):max(labour_force_status_by_reg$year))) + \n  theme(axis.text.x = element_text(angle=90,vjust=1,hjust=1)) +\n  labs(title = \"Unemployment Rate by Region\")\n\n\n\n\n\nlabour_force_status_by_reg %>%\n  filter(region != \"Total\") %>%\n  ggplot(aes(y=unemployment_rate, group = gender)) + \n  geom_boxplot(fill=\"steelblue\") +\n  facet_grid(gender ~ region) + \n  theme(axis.text.x = element_text(angle=90,vjust=1,hjust=1)) +\n  theme(strip.text.x = element_text(size = 5)) +\n  labs(title = \"Unemployment Distribution by Region\")\n\n\n\n\n\nreasons_of_not_being_in_lab_for %>%\n  #filter(gender == \"Female\") %>%\n  group_by(reason,year, gender) %>%\n  summarise(sum_of_not_in_lab_force = sum(pop_not_in_lab_force)) %>%\n  pivot_wider(values_from = sum_of_not_in_lab_force, names_from = gender) %>%\n  transmute(year = year,reason = reason, Female_ = Female/ (Female+Male), Male_ = 1 - Female/ (Female+Male)) %>%\n  pivot_longer(cols= ends_with(\"ale_\"),values_to = \"ratio_not_in_labor_force\", names_to = \"gender\") %>%\n  ggplot(aes(x = year, y = ratio_not_in_labor_force, color = gender)) +\n  geom_line() + \n  facet_wrap( ~ reason) +\n  labs(title = \"Reasons of not being in labour force by Gender\")\n\n\n\n\n\ndiff<-female%>%mutate(ratio=male$employed_rate/female$employed_rate) %>%select(-gender)\nggplot(diff, aes(x = year, y = ratio, color = marital_status)) + geom_line() +\n    scale_x_continuous(breaks = c(min(female$year):max(female$year))) +\n  labs(title = \"Ratio of Employment to Unemployment by Gender\")\n\n\n\n\n\nmean_age_of_mother_by_statistic %>%\n  filter(province == \"İstanbul\") %>%\n  ggplot(aes(x = year, y = mother_mean_age)) +\n  geom_line() +\n  coord_cartesian(xlim = c(2009,2021),ylim = c(25,max(mean_age_of_mother_by_statistic$mother_mean_age + 5))) +\n  geom_line(arrow = arrow(), aes(color = year)) +\n  geom_point(color = \"#0099f9\", size = 5) +\n  labs(title = \"Mean Age of Mother by Year in İstanbul\")\n\n\n\n\n\nfive_metropolis <- c(\"İstanbul\",\"Ankara\",\"İzmir\",\"Bursa\",\"Adana\")\n\nmean_age_of_mother_by_statistic %>%\n  filter(province %in% five_metropolis, year %in% c(2019,2020,2021)) %>%\n  ggplot(aes(x = year, y= mother_mean_age)) +\n  geom_bar(stat = \"identity\", position = position_dodge(), alpha = 0.75) +\n  facet_grid(. ~province) +\n  ylim(0,35) +\n  geom_text(aes(label = sprintf(\"%.2f\",mother_mean_age)), fontface = \"bold\", vjust = 1.5, colour = \"white\", size = 3) +\n  labs(x = \"\\n Years\", y = \"Mean Mother Age\\n\", title = \"\\n Mean Mother Age by Year and Metropolis \\n\") +\n  theme(plot.title = element_text(hjust = 0.5), \n        axis.title.x = element_text(face=\"bold\", colour=\"darkgreen\", size = 12),\n        axis.title.y = element_text(face=\"bold\", colour=\"darkgreen\", size = 12),\n        legend.title = element_text(face=\"bold\", size = 10),\n        strip.background = element_rect(fill=\"lightblue\", colour=\"black\", size=1),\n        strip.text = element_text(face=\"bold\", size=rel(1.2))) +\n  labs(title = \"Mean Age of Mother by Metropolis in the last 3 years\")\n\n\n\n\n\nmean_age_of_mother_by_statistic %>%\n  ggplot(aes(x = mother_mean_age, fill = year)) +\n  geom_histogram(bins = 10) +\n  facet_grid(year~.) +\n  labs(title = \"Mean Age of Mother by Year\")\n\n\n\n\nMinimum Average Age of Mother by Region\n\nmean_age_of_mother_by_statistic %>%\n  select(region,year ,mother_mean_age) %>%\n  group_by(region,year) %>%\n  summarise(min_mean_mother_age = min(mother_mean_age)) %>%\n  pivot_wider(values_from = min_mean_mother_age, names_from = year)\n\n# A tibble: 12 × 14\n# Groups:   region [12]\n   region  `2009` `2010` `2011` `2012` `2013` `2014` `2015` `2016` `2017` `2018`\n   <chr>    <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>\n 1 TR1 İs…   28.0   28.3   28.4   28.7   28.9   29.1   29.2   29.4   29.6   29.7\n 2 TR2 Ba…   27.0   27.0   27.2   27.5   27.7   27.9   27.9   28.1   28.2   28.6\n 3 TR3 Eg…   25.8   26.1   26.3   26.5   26.9   27.0   27.1   27.1   27.3   27.5\n 4 TR4 Do…   27.1   27.6   27.8   28.0   28.0   28.5   28.3   28.5   28.8   28.9\n 5 TR5 Ba…   26.8   27.0   27.2   27.4   27.7   27.8   28.0   28.1   28.2   28.3\n 6 TR6 Ak…   26.6   26.8   27.0   27.3   27.5   27.7   27.8   27.9   28.0   28.1\n 7 TR7 Or…   25.8   26.1   26.2   26.7   27.0   27.1   27.2   27.5   27.4   27.6\n 8 TR8 Ba…   26.2   26.4   26.8   27.0   27.4   27.6   27.8   27.9   28.0   27.9\n 9 TR9 Do…   26.6   26.8   27.1   27.5   27.7   27.9   28.1   28.3   28.4   28.6\n10 TRA Ku…   26.2   26.4   26.3   26.5   26.7   26.7   26.8   26.8   26.7   26.8\n11 TRB Or…   26.6   26.7   26.7   26.7   27.0   27.0   27.0   26.9   27.0   27.1\n12 TRC Gü…   27.0   26.8   26.8   27.1   27.3   27.2   27.4   27.2   27.1   27.1\n# … with 3 more variables: `2019` <dbl>, `2020` <dbl>, `2021` <dbl>\n\n\n\nplot_data1<-crude_divorce_rate_by_provinces %>% \n       group_by(province) %>% \n       summarise(avg_rate = mean(crude_divorce_rate))%>% \n      arrange(desc(avg_rate)) %>%\n     top_n( 5)\n\nggplot(plot_data1,aes(x=province, y=avg_rate, fill= province)) + \n  geom_bar(stat = \"identity\") +\n  labs(title = \"Top 10 provinces for the average divorce rate (2012-2021)\")\n\n\n\n\n\nplot_data2<-crude_divorce_rate_by_provinces %>% \n       group_by(province) %>% \n       summarise(avg_rate = mean(crude_divorce_rate))%>% \n      arrange(avg_rate) %>%\n     slice(1:5) \n\nggplot(plot_data2,aes(x=province, y=avg_rate, fill=province)) + \n  geom_bar(stat = \"identity\") +\n  labs(title = \"Top 10 provinces for the lowest average divorce rate (2012-2021)\")"
  }
]